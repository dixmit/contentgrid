===========
Contentgrid
===========

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:836531b69019b439cc3fc793f8175ed3c84c9e11cd53910212caa38929845d49
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-dixmit%2Fcontentgrid-lightgray.png?logo=github
    :target: https://github.com/dixmit/contentgrid/tree/18.0/contentgrid
    :alt: dixmit/contentgrid

|badge1| |badge2| |badge3|

This module creates a bridge between ContentGrid and Odoo. Attachments
from Odoo can be linked to ContentGrid depending on their configuration.
Also, extra entities can be linked, but they will be linked once we send
the attachment.

**Table of contents**

.. contents::
   :local:

Configuration
=============

In order to create an integration between contentgrid and Odoo we must
follow this steps:

1. Access in Developer Mode your Odoo instance
2. Access the menu *Settings / Technical / ContentGrid / Connection*
3. Create a connection using all the information provided for the
   integration.
4. Access the menu *Settings / Technical / ContentGrid / Configuration*
5. Create a configuration using the model you want to use to send
   attachments to contentgrid and specify the correct connection

Configuration YAML
------------------

In order to make the configuration, you need to specify a complex yaml.
We will provide an example and explain the logic of it.

::

   attachment:
     data:
       name: record.name
       checksum: record.checksum
     binary:
       data:
         compute: record.datas
         name: record.name
         mimetype: record.mimetype
   invoice:
     compute: record
     data:
       name: record.name
       invoice_date: parse_date(record.invoice_date)
       reference: record.ref
     link:
       - attachment
   partner:
     compute: record.partner_id
     data:
       name: record.name
       vat: record.vat
     link:
       - invoice

Each element of the yaml specifies a model in ContentGrid. It must be
the same name that the model has in ContentGrid.

On each element we can the following elements:

- ``data``: Specifies a map of simple fields. This must return a
  dictionaries where the key is the name of the field on contentgrid and
  the value the calculation in odoo for the element.
- ``binary``: Specifies a map of binary fields. It must return a
  dictionary where the key is the name of the field and the value a new
  dictionary

  - ``compute``: specifies how to compute the base64 data of the file
  - ``name``: Specifies the name of the file
  - ``mimetype``: Specifies the mimetype of the file

- ``compute``: Specifies how to compute the record related to the model.
  If it is not specified, it uses the attachment, otherwise, record is
  the record related to the attachment. All the fields and binary fields
  will be computed from the record element that we have in hands.
- ``link``: Specifies a list of relations. It is used to make a relation
  between elements in ContentGrid.

In the example provided:

- ``attachment`` is a model in ContentGrid that will be filled directly
  from the attachment. It will contain 3 fields, name
  (``attachment.name``), checksum (``attachment.checksum``) and data.
  Data will be taken directly from the attachment.
- ``invoice`` corresponds to the related invoice. It corresponds to the
  related record to the attachment (``compute: record``). It has 3
  fields: name, invoice_date (parsed with parse_date) and reference
  (``record.ref``). It will be linked to the attachment
- ``partner`` corresponds to the partner of the invoice
  (``compute: record.partner_id``). It has 2 fields, name and vat. It is
  linked with the invoice.

If we create a similar configuration with the same connection but for
purchase orders, data will be shown properly in ContentGrid. It means
that if we send data for a Purchase Order and later on the invoice, we
will see the invoice and purchase order related to the same partner.

Usage
=====

Once we have the configuration made, the links will be done
automatically.

All integrated documents will have the contentgrid icon on the
attachment:

|ContentGrid Attachment|

If you press the icon, a popup will be launched showing the information
of it in contentgrid and a link to the app:

|ContentGrid Popup|

Also, related records will show the same icon in the thread menu and
will allow us to check the data sent to ContentGrid.

|ContentGrid Thread|

In case we want to force the send, we can do it manually by using the
*Allow manual send* field on the configuration. This will show a button
that sends the data to content grid (only attachments not sent)

|image1|

.. |ContentGrid Attachment| image:: https://raw.githubusercontent.com/dixmit/contentgrid/18.0/contentgrid/static/img/contentgrid_attachment.png
.. |ContentGrid Popup| image:: https://raw.githubusercontent.com/dixmit/contentgrid/18.0/contentgrid/static/img/contentgrid_popup.png
.. |ContentGrid Thread| image:: https://raw.githubusercontent.com/dixmit/contentgrid/18.0/contentgrid/static/img/contentgrid_thread.png
.. |image1| image:: https://raw.githubusercontent.com/dixmit/contentgrid/18.0/contentgrid/static/img/contentgrid_thread_force.png

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/dixmit/contentgrid/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/dixmit/contentgrid/issues/new?body=module:%20contentgrid%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
-------

* Dixmit

Contributors
------------

- `Dixmit <https://www.dixmit.com>`__

  - Enric Tobella

Maintainers
-----------

This module is part of the `dixmit/contentgrid <https://github.com/dixmit/contentgrid/tree/18.0/contentgrid>`_ project on GitHub.

You are welcome to contribute.
